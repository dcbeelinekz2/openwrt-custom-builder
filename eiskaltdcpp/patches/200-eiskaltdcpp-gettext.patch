--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -54,7 +54,6 @@ find_package (BZip2 REQUIRED)
 find_package (ZLIB REQUIRED)
 find_package (OpenSSL REQUIRED)
 find_package (Threads REQUIRED)
-find_package (Gettext REQUIRED)
 find_package (Iconv REQUIRED)
 find_package (Git)
 find_package (Xattr)
@@ -374,12 +373,6 @@ if (JSONRPC_DAEMON)
 add_subdirectory (json)
 endif (JSONRPC_DAEMON)
 
-if(GETTEXT_FOUND)
-    option (UPDATE_PO "Update po files" OFF)
-    option (CREATE_MO "Create mo files" ON)
-    add_subdirectory(cmake)
-endif(GETTEXT_FOUND)
-
 message(STATUS "CMAKE_SYSTEM: ${CMAKE_SYSTEM}")
 message(STATUS "CMAKE_SYSTEM_PROCESSOR: ${CMAKE_SYSTEM_PROCESSOR}")
 message(STATUS "CMAKE_CXX_COMPILER_ID: ${CMAKE_CXX_COMPILER_ID}")
@@ -394,7 +387,6 @@ message(STATUS "CMAKE will use this libs (and headers) during build:
     openssl (headers): ${OPENSSL_LIBRARIES} (${OPENSSL_INCLUDE_DIR})
     iconv (headers): ${ICONV_LIBRARIES} (${ICONV_INCLUDE_DIR})
     aspell (headers): ${ASPELL_LIBRARIES} (${ASPELL_INCLUDE_DIR})
-    gettext (headers): ${GETTEXT_LIBRARIES} (${GETTEXT_INCLUDE_DIR})
     pcre(cpp) (headers): ${PCRE_LIBRARIES} (${PCRE_INCLUDE_DIR})
     idna (headers): ${IDNA_LIBRARIES} (${IDNA_INCLUDE_DIR})
     ")
--- a/dcpp/CMakeLists.txt
+++ b/dcpp/CMakeLists.txt
@@ -15,7 +15,7 @@ if (NOT LUA_SCRIPT)
   list (REMOVE_ITEM dcpp_srcs ${PROJECT_SOURCE_DIR}/ScriptManager.cpp)
 endif ()
 
-include_directories (${Boost_INCLUDE_DIR} ${BZIP2_INCLUDE_DIR} ${ZLIB_INCLUDE_DIR} ${OPENSSL_INCLUDE_DIR} ${GETTEXT_INCLUDE_DIR} ${LUA_INCLUDE_DIR} ${IDNA_INCLUDE_DIR})
+include_directories (${Boost_INCLUDE_DIR} ${BZIP2_INCLUDE_DIR} ${ZLIB_INCLUDE_DIR} ${OPENSSL_INCLUDE_DIR} ${GETTEXT_INCLUDE_DIR} ${ICONV_INCLUDE_DIR} ${LUA_INCLUDE_DIR} ${IDNA_INCLUDE_DIR})
 
 if (WIN32)
   set (LINK STATIC)
@@ -106,9 +106,3 @@ if (WITH_DEV_FILES)
     message (STATUS "Headers of libeiskaltdcpp will be installed to: ${EISKALTDCPP_INCLUDE_DIR}")
     install (FILES ${dcpp_hdrs} DESTINATION ${EISKALTDCPP_INCLUDE_DIR}/dcpp/)
 endif (WITH_DEV_FILES)
-
-foreach(LANG ${LANGUAGES})
-    install(FILES
-        ${dcpp_BINARY_DIR}/locale/${LANG}/LC_MESSAGES/libeiskaltdcpp.mo
-            DESTINATION ${LOCALE_DIR}/${LANG}/LC_MESSAGES)
-endforeach(LANG ${LANGUAGES})
--- a/dcpp/Util.h
+++ b/dcpp/Util.h
@@ -36,7 +36,6 @@
 #include <map>
 #include "Text.h"
 
-extern "C" int  _nl_msg_cat_cntr;
 
 namespace dcpp {
 
@@ -459,10 +458,6 @@ public:
 #else
             setenv ("LANGUAGE", lang.c_str(), 1);
 #endif
-        /* Make change known.  */
-        {
-        ++_nl_msg_cat_cntr;
-        }
     }
 
     static bool getAway();
--- a/dcpp/stdinc.h
+++ b/dcpp/stdinc.h
@@ -89,7 +89,6 @@ typedef unsigned __int64 uint64_t;
 #include <memory>
 #include <numeric>
 #include <limits>
-#include <libintl.h>
 
 #include <boost/format.hpp>
 #include <boost/scoped_array.hpp>
--- a/dht/CMakeLists.txt
+++ b/dht/CMakeLists.txt
@@ -6,7 +6,7 @@ cmake_minimum_required (VERSION 2.6)
 
 aux_source_directory(${PROJECT_SOURCE_DIR} dht_srcs)
 
-include_directories (${Boost_INCLUDE_DIR} ${OPENSSL_INCLUDE_DIR} ${BZIP2_INCLUDE_DIR} ${ZLIB_INCLUDE_DIR} ${LUA_INCLUDE_DIR})
+include_directories (${Boost_INCLUDE_DIR} ${OPENSSL_INCLUDE_DIR} ${BZIP2_INCLUDE_DIR} ${ZLIB_INCLUDE_DIR} ${LUA_INCLUDE_DIR} ${GETTEXT_INCLUDE_DIR})
 
 if (WITH_DHT)
   add_definitions ( -DWITH_DHT )
--- a/eiskaltdcpp-daemon/CMakeLists.txt
+++ b/eiskaltdcpp-daemon/CMakeLists.txt
@@ -1,7 +1,7 @@
 project(${PROJECT_NAME_GLOBAL}-daemon)
 cmake_minimum_required(VERSION 2.6)
 # ######### General setup ##########
-include_directories(${PROJECT_SOURCE_DIR} ${PROJECT_SOURCE_DIR}/.. ${Boost_INCLUDE_DIRS})
+include_directories(${PROJECT_SOURCE_DIR} ${PROJECT_SOURCE_DIR}/.. ${Boost_INCLUDE_DIRS} ${GETTEXT_INCLUDE_DIR})
 
 aux_source_directory(${PROJECT_SOURCE_DIR} nasdc_SRCS)
 
@@ -68,6 +68,7 @@ list(APPEND LIBS
         ${JSONRPCLIBS}
         ${Boost_LIBRARIES}
         ${ICONV_LIBRARIES}
+        pthread
         )
 
 target_link_libraries (${PROJECT_NAME} dcpp ${LIBS})
--- a/eiskaltdcpp-gtk/CMakeLists.txt
+++ b/eiskaltdcpp-gtk/CMakeLists.txt
@@ -156,8 +156,3 @@ else (APPLE)
   endif (UNIX)
 endif (APPLE)
 
-foreach(LANG ${LANGUAGES})
-    install(FILES
-        ${PROJECT_BINARY_DIR}/locale/${LANG}/LC_MESSAGES/${PROJECT_NAME}.mo
-            DESTINATION ${LOCALE_DIR}/${LANG}/LC_MESSAGES)
-endforeach(LANG ${LANGUAGES})
